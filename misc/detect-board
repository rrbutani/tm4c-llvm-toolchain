#!/bin/bash

###############################################################################
# Quick and dirty script to find the right device path for the LM4F/TM4C across
# OSes for Rasware.
#
# Tested on x64 Linux, macOS 10.12 (Sierra), and WSL Ubuntu 18.04. Contains
# much magic.
###############################################################################

UDEV_PATH="/dev/lm4f"
CACHE_NAME=".detect-board-cache"

set -x

function outputDevice
{
    echo "$1" | tee "${CACHE_NAME}" && exit 0
}

function macOS
{
    dev=$(system_profiler SPUSBDataType | awk 'BEGIN { RS = "" } $0 ~ /In-Circuit Debug Interface/ {dev=++FNR; print dev}')
    sn=$(system_profiler SPUSBDataType | awk -v dev="$dev" 'BEGIN { RS = ""; FS="\n"} FNR == dev {print $0}' | grep "Serial Number")
    sn=$(cut -d ':' -f2 <<< $sn | sed 's/ //' | sed 's/.\{1\}$//')

    dev_paths=$(find /dev -iname "tty.usbmodem${sn}[a-zA-Z0-9]" 2>/dev/null)

    # If, by some awful coincidence, we end up with multiple devices with very similar serial nums,
    # use the first one:
    dev_paths=("${dev_paths}")
    dev_path=${dev_paths[0]}

    # Make sure this device actually exists:
    if [ -c "${dev_path}" ]; then
        outputDevice "${dev_path}"
    else
        linux
    fi
}

# function wsl
# {
    
# }

function linux
{
    if [ -c "${UDEV_PATH}" ]; then
        outputDevice "${UDEV_PATH}"
    elif [ -c "/dev/ttyACM0" ]; then
        outputDevice "/dev/ttyACM0"
    else
        >&2 echo "Sorry, we couldn't find your board. Please make sure it's plugged in and try again."
        >&2 echo "If this problem persists, file an issue at bit.ly/2nziQhj or contact us."
        exit 1
    fi
}

if [ -f "${CACHE_NAME}" ]; then
    read dev < "${CACHE_NAME}"
    [ -c "${dev}" ] && outputDevice "${dev}"
fi

if [ "$(uname)" == "Darwin" ]; then
    # macOS User!
    macOS
elif [ "$(expr substr "$(uname -s)" 1 5)" == "Linux" ]; then
    if grep -q Microsoft /proc/version; then
        # Windows Subsystem for Linux:
        wsl
    else
        # Another Linux user!
        linux
    fi
elif [ "$(expr substr "$(uname -s)" 1 10)" == "MINGW32_NT" ]; then
    >&2 echo "Sorry, Cygwin/MinGW are not supported at this time."
    exit 1
else
    >&2 echo "Unknown platform. Please file an issue at bit.ly/2nziQhj or contact us."
fi

##########################
# AUTHOR:  Rahul Butani  #
# DATE:    Oct. 07, 2018 #
# VERSION: 0.1.0         #
##########################