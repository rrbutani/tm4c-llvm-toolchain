# Build file for shoes (lib)

# Careful! This file was autogenerated (on March 03, 2019 01:01 AM by version
# 0.2.1 of `gen.sh`). If you need to make changes, consider running `gen.sh`
# again (see below for the arguments it was called with) with different
# arguments and env vars or running `ninja regenerate`. See git.io/fhNW6#usage
# for help.

common_dir = ../..

include $common_dir/common.ninja

# Arguments passed to gen.sh; used when regenerating this file.
gen_vars = $
  DOCKER='docker' $
  DOCKER_CONTAINER='rrbutani/arm-llvm-toolchain' $
  GLOBS='%.s:a|%.S:A|%.c:c|%.cpp:C|%.cc:C|%.cxx:C|' $
  FOLDERS='. src asm' $
  BUILD_FILE='build.ninja' 
gen_args = $
  'hybrid' $
  'shoes.a' $
  '../modules/contrib/contrib.a ../modules/hal/hal.a' $
  '../../misc/..'

target_type = lib
name = shoes
mode = üêã $

docker_prefix = docker run
docker_flags  = -t $
  -v '/media/data/Documents/Development/Personal/tm4c-llvm-toolchain':'/opt/.' $
  -v '/media/data/Documents/Development/Personal/tm4c-llvm-toolchain/playground/testmod':'/opt/playground/testmod' $
  -v '/media/data/Documents/Development/Personal/tm4c-llvm-toolchain/playground/testmod/contrib':'/opt/playground/testmod/contrib' $
  -v '/media/data/Documents/Development/Personal/tm4c-llvm-toolchain/playground/testmod/hal':'/opt/playground/testmod/hal' $
  -w '/opt/playground/testmod'
docker_cntnr  = rrbutani/arm-llvm-toolchain

# Build Type: debug

cc_opt_level  = $cc_opt_debug
lto_opt_level = $lto_opt_debug

# TODO: OBJS, LINK

build $builddir/debug/$name.axf: objcopy $builddir/debug/$name.out

build size-debug: size $builddir/debug/$name.out
build build-debug: phony $builddir/debug/$name.axf

build flash-debug: flash $builddir/debug/$name.axf
    docker_flags = $docker_flags --privileged
build run-debug: start $builddir/debug/$name.axf | flash-debug
    docker_flags = $docker_flags --privileged

# Build Type: release

cc_opt_level  = $cc_opt_release
lto_opt_level = $lto_opt_release

# TODO: OBJS, LINK

build $builddir/release/$name.axf: objcopy $builddir/release/$name.out

build size-release: size $builddir/release/$name.out
build build-release: phony $builddir/release/$name.axf

build flash-release: flash $builddir/release/$name.axf
    docker_flags = $docker_flags --privileged
build run-release: start $builddir/release/$name.axf | flash-release
    docker_flags = $docker_flags --privileged

# And finally:

build size: phony size-release
build build: phony build-release
build flash: phony flash-release
build run: phony run-release

build clean: rm $builddir

build graph.png: graph
  ninja_graph_target = all

build graph: phony graph.png

# TODO: warning about running this in docker for hybrid confs
build browse: browse
    ninja_browse_flags = -p 8000 -a 0.0.0.0
    docker_flags = $docker_flags -i -p 8000:8000

# TODO: Docker or not? Possibly only an issue for 'docker' configs..
build compile_commands.json: compdb
build compdb: phony compile_commands.json

build format: format $
  a.c $
  b$ yak.c $
  ${common_dir}/src/startup.c $
  b.c $
  src/a.cpp

build regenerate: regenerate
    docker_prefix =
    docker_flags =
    docker_cntnr =
build build.ninja: regenerate | $common_dir/common.ninja
    docker_prefix =
    docker_flags =
    docker_cntnr =

build all: phony build-release build-debug

default build
